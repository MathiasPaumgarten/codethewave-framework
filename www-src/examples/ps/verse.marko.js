function create(__helpers) {
  var str = __helpers.s,
      empty = __helpers.e,
      notEmpty = __helpers.ne;

  return function render(data, out) {
    out.w('<!doctype html> <html class="no-js" lang><head><meta charset="utf-8"><meta http-equiv="x-ua-compatible" content="ie=edge"><title>Hue</title><meta name="description" content><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"><link rel="apple-touch-icon" href="apple-touch-icon.png"><link rel="stylesheet" href="../../main.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/detectizr/2.2.0/detectizr.min.js"></script><script src="../../js/pixi.min.js"></script><script src="../../js/TweenMax.min.js"></script></head><body><!--[if lt IE 8]>\n\n        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n\n    <![endif]--><script src="../../sp-framework.js"></script><script src="/js/ps-includes.js"></script><script>\n\n        var DEG2RAD = Math.PI / 180.0;\n\n        print = console.log;//TEMP\n\n        var background;\n        var backgroundColorFilter;\n        var frontRotatingSprite;\n        var frontPatternSprite;\n        var text; \n        var textFadeDuration = 0;\n        var textContainer;\n        var didShowText = false;\n        var didHideText = false;\n        var currentCast = "";\n\n        var beatInterval = 1000;//millis\n        var lastBeatTime;\n        var beatRotationSpeed = 0;\n\n        function showText(show)\n        {\n            if(show)\n            {\n                if(didShowText)\n                {\n                    return;\n                }\n                didShowText = true;\n                textContainer.addChild(text);\n                text.alpha = 0;\n                TweenMax.to(text, textFadeDuration, {alpha: 1});\n            }\n            else\n            {\n                if(!didShowText || didHideText)\n                {\n                    return;\n                }\n                didHideText = true;\n                TweenMax.to(text, textFadeDuration, {alpha: 0, onComplete: function()\n                    {\n                        textContainer.removeChild(text);\n                        showFrontElement();\n                    }});\n            }\n        }\n\n        function showFrontElement()\n        {\n            //console.log("show front element");\n            textContainer.addChild(frontRotatingSprite);\n            beatRotationSpeed = 15 * DEG2RAD;\n            lastBeatTime = new Date().getTime();\n            frontRotatingSprite.alpha = 0;\n            TweenMax.to(frontRotatingSprite, 0.5, {alpha: 1});\n        }\n\n        SPF.set({\n\n            at:"back",\n            load: function(PIXI, input) \n            {\n                //TODO: Preload textures. First move them into framework\n                return [];\n                //return [input.patterns.animaltech];\n            },\n\n            init: function(PIXI, input) \n            {\n                //TODO: Move textures into framework\n                var backgroundTexture = PIXI.Texture.fromImage(\'/assets/ps_temp/SP_pattern_botanicorganic_background.png\'); //TODO: Load from framework\n                //background = new PIXI.extras.TilingSprite(backgroundTexture, 1, 1);\n                //background.anchor.set(0);\n                background = SPF.fullscreenSprite(input.container,  backgroundTexture );\n                \n\t            backgroundColorFilter = new PIXI.filters.ColorMatrixFilter();\n                background.filters = [backgroundColorFilter];\n                \n                backgroundColorFilter.reset();\n                backgroundColorFilter.brightness(0.5, true);\n                //backgroundColorFilter.saturate(1, true);\n                backgroundColorFilter.hue(30, true);\n                input.container.addChild(background);\n            },\n\n            //TODO: Animate framerate independent using delta time\n            render:function(PIXI, input)\n            {\n                \n            }\n        });\n\n        SPF.set({\n\n            at:"fore",\n            load: function(PIXI, input) \n            {\n                //TODO: Preload textures. First move them into framework\n                return [];\n                //return [input.patterns.animaltech];\n            },\n\n            init: function(PIXI, input) \n            {\n                //TODO: Font?\n                text = new PIXI.Text(\'THE\\nWAVE\', {fontFamily : \'Arial Black\', fontSize: 100, fill :0xffffff, align : \'center\'});\n                text.anchor.set(0.5);\n                textContainer = input.container;\n\n                var frontSpriteTexture = PIXI.Texture.fromImage(\'/assets/ps_temp/SP_element_crazyflower_001.png\'); //TODO: Move to framework\n                frontRotatingSprite = new PIXI.Sprite(frontSpriteTexture);\n                frontRotatingSprite.anchor.set(0.5);\n                frontRotatingSprite.rotation = Math.random() * 2 * Math.PI;\n\n                var frontPatternTexture = PIXI.Texture.fromImage(\'/assets/ps_temp/SP_pattern_botanicorganic_crazyness.png\'); //TODO: Move to framework\n                frontPatternSprite = SPF.fullscreenSprite(input.container,  frontPatternTexture );\n                frontPatternSprite.visible = false;\n                \n            },\n\n            //TODO: Animate framerate independent using delta time\n            render:function(PIXI, input)\n            {\n                //Fake beat\n                //TODO: Replace by beat detection\n                var timeSinceBeat = new Date().getTime() - lastBeatTime;\n                if (timeSinceBeat > beatInterval)\n                {\n                    lastBeatTime = new Date().getTime();\n                    beatRotationSpeed = 15 * DEG2RAD;\n\n                    //beat faking for pattern\n                        frontPatternSprite.alpha = 1;\n                }\n\n                beatRotationSpeed *= 0.85;\n                frontRotatingSprite.rotation += beatRotationSpeed;\n\n                //Changes on cast\n                if(input.cast != null && input.cast.id != currentCast)\n                {\n                    currentCast = input.cast.id\n                    \n                    //Hues\n                    switch(input.cast.id)\n                    {\n                        case "singer":\n                            backgroundColorFilter.reset();\n                            backgroundColorFilter.brightness(0.5, true);\n                            backgroundColorFilter.saturate(2, true);\n                            backgroundColorFilter.hue(120, true);\n                            break;\n                        case "bass":\n                        case "drums":\n                            backgroundColorFilter.reset();\n                            backgroundColorFilter.brightness(0.5, true);\n                            backgroundColorFilter.saturate(1, true);\n                            backgroundColorFilter.hue(-20, true);\n                            break;\n                        case "all":\n                        case "none":\n                        default:\n                            backgroundColorFilter.reset();\n                            backgroundColorFilter.brightness(0.5, true);\n                            //backgroundColorFilter.saturate(1, true);\n                            backgroundColorFilter.hue(30, true);\n                            break;\n                    }\n                    //TEXT\n                    if(input.cast.id == "none")\n                    {\n                        showText(true);\n                    }\n                    else\n                    {\n                        showText(false);\n                    }\n\n                    //front element\n                    if(didHideText)\n                    {\n                        frontPatternSprite.visible = input.cast.id == "drums";\n                        frontPatternSprite.alpha = 1;\n                        frontRotatingSprite.visible = input.cast.id != "drums";\n                    }\n                }\n\n                //Fade pattern outdated\n                frontPatternSprite.alpha *= 0.85;\n            },\n\n            resize: function(PIXI, input) \n            {\n                text.position.set(input.width/2, input.height/2);\n                text.style.fontSize = input.width/5;\n\n                //console.log(frontRotatingSprite.scale);\n                frontRotatingSprite.scale.x = frontRotatingSprite.scale.y = input.width / 1200.0;\n                frontRotatingSprite.position.set(input.width/2, input.height*1.1);\n            }\n\n        });\n\n        SPF.info({\n            debug: false,\n            title: "Verse",\n            tip: "Move the mouse around and click the screen",\n            firstName: "Patrik",\n            lastName: "Svensson",\n            email: "ps@molamil.com"\n        });\n\n        SPF.start();\n\n    </script></body></html>');
  };
}
(module.exports = require("marko").c(__filename)).c(create);