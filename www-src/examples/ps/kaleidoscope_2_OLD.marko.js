function create(__helpers) {
  var str = __helpers.s,
      empty = __helpers.e,
      notEmpty = __helpers.ne;

  return function render(data, out) {
    out.w('<!doctype html> <html class="no-js" lang><head><meta charset="utf-8"><meta http-equiv="x-ua-compatible" content="ie=edge"><title>Kaleidoscope</title><meta name="description" content><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"><link rel="apple-touch-icon" href="apple-touch-icon.png"><link rel="stylesheet" href="../../main.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/detectizr/2.2.0/detectizr.min.js"></script><script src="../../js/pixi.min.js"></script><script src="../../js/TweenMax.min.js"></script></head><body><!--[if lt IE 8]>\n\n        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n\n    <![endif]--><script src="../../sp-framework.js"></script><script>\n\n        //This did not port nicely from Unity so it\'s a bit hacked\n        var frag = [\n            "varying vec2 vTextureCoord;",\n\n            "uniform float sections;",\n            "uniform float time;",\n\n            "uniform float xOff;",\n            "uniform float yOff;",\n\n            "uniform sampler2D uSampler;",\n\n            "float repeat(float a)",\n            "{",\n            "   return a - floor(a);",\n            "}",\n\n            "void main(void) {",\n            "   float PI = 3.141592658;",//Move to Uniform?\n\t\t\t"\tfloat TAU = 6.283185316;",//Move to Uniform?\n            "\tvec2 pos = vTextureCoord;",// - 0.5;",//Does not offset to center...\n            "   pos.x -= xOff;",\n            "   pos.y -= yOff;",\n            "\tfloat rad = length(pos);",\n            "   float angle = atan(pos.y, pos.x);",\n            "   float ma = mod(angle, TAU/sections);",\n  \t\t\t"\tma = abs(ma - PI/sections);",\n            "   float x = cos(ma) * rad;",\n  \t\t\t"\tfloat y = sin(ma) * rad;",\n            "   float xt = x - time;",\n            "   float yt = y - time;",\n            "   xt = repeat(xt);",\n            "   yt = repeat(yt);",\n            "   vec2 uv = vec2(xt, yt);",\n            "   vec3 col = texture2D(uSampler, uv).rgb;",\n            //HACK. For some reason the uvs are bonkers. \n            "   if (col.r == 0.0 && col.g == 0.0 && col.b == 0.0)",\n            "   {",\n            "       uv.x = repeat(uv.x - 0.75);", \n            "       uv.y = repeat(-uv.y + 0.05);", \n            "       col = texture2D(uSampler, uv).rgb;",\n            "   }",\n            //\n            "   gl_FragColor = vec4(col.rgb, 1.0);",\n            "}",\n        ].join("\\n")\n    \n        var DEG2RAD = Math.PI / 180.0;\n\n        var background;\n        var filter;\n        var uniforms;\n        var repeat = 6.0;\n        var offset = 0.0;\n        var roll = 0.0;\n\n        var spawnIntervalMillis = 1000;\n        var lastSpawnTime;\n\n        var touching = false;\n\n        SPF.set({\n\n            at:"back",\n            load: function(PIXI, input) \n            {\n                return [input.patterns.animaltech];\n            },\n\n            init: function(PIXI, input) \n            {\n                background = new PIXI.Sprite(input.patterns.animaltech);\n                \n                input.container.addChild(background);\n\n                uniforms = {\n                    "xOff": {\n                        type:"f",\n                        value: 0.5\n                    },\n                    "yOff": {\n                        type:"f",\n                        value: 0.5\n                    },\n                    "sections": {\n                        type:"f",\n                        value: 6.0\n                    },\n                    "time": {\n                        type:"f",\n                        value: 0.0\n                    }\n                };\n\n                filter = new PIXI.Filter(null,frag,uniforms);\n                background.filters = [filter];\n\n                lastSpawnTime = new Date().getTime();\n            },\n\n            render:function(PIXI, input)\n            {\n                var timeSinceSpawn = new Date().getTime() - lastSpawnTime;\n                if (timeSinceSpawn > spawnIntervalMillis)\n                {\n                    \n                }\n\n                filter.uniforms.width = background.width;\n                filter.uniforms.height = background.height;\n                \n                filter.uniforms.time += 0.002;\n\n                /*\n                if( input.mouseTouchPosition.x != 0 &&  input.mouseTouchPosition.y != 0)\n                {\n                    filter.uniforms.xOff = input.mouseTouchPosition.x / background.width;\n                    filter.uniforms.yOff = input.mouseTouchPosition.y / background.height;\n                }\n                else\n                {\n                    filter.uniforms.xOff = 0.5;\n                    filter.uniforms.yOff = 0.5;\n                }\n                */\n\n                //filter.uniforms.xOff = touching ? input.mouseTouchPosition.x / background.width : 0.5;\n                //filter.uniforms.yOff = touching ? input.mouseTouchPosition.y / background.height : 0.5;\n            },\n\n            resize: function(PIXI, input) \n            {\n                background.width = input.width;\n                background.height = input.height;\n            },\n\n            mouseDownTouchStart: function(PIXI, input) \n            {\n                touching = true;\n            },\n\n            mouseUpTouchEnd: function(PIXI, input) \n            {\n                touching = false;\n            },\n\n        });\n\n        SPF.info({\n            debug: false,\n            title: "Custom Filter (Kaleidoscope)",\n            tip: "PIXI\'s Custom filters used to create Kaleidoscope Effect",\n            firstName: "Patrik",\n            lastName: "Svensson",\n            email: "ps@molamil.com"\n        });\n\n        SPF.start();\n\n    </script></body></html>');
  };
}
(module.exports = require("marko").c(__filename)).c(create);