function create(__helpers) {
  var str = __helpers.s,
      empty = __helpers.e,
      notEmpty = __helpers.ne;

  return function render(data, out) {
    out.w('<!doctype html> <html class="no-js" lang><head><meta charset="utf-8"><meta http-equiv="x-ua-compatible" content="ie=edge"><title>Kaleidoscope</title><meta name="description" content><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"><link rel="apple-touch-icon" href="apple-touch-icon.png"><link rel="stylesheet" href="../../main.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/detectizr/2.2.0/detectizr.min.js"></script><script src="../../js/pixi.min.js"></script><script src="../../js/TweenMax.min.js"></script></head><body><!--[if lt IE 8]>\n\n        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n\n    <![endif]--><script src="../../sp-framework.js"></script><script>\n\n        var frag = [\n            "precision mediump float;",\n            "uniform float width;",\n            "uniform float height;",\n            "uniform sampler2D uSampler;",\n            "void main(void) {",\n            "   vec2 p = vec2(gl_FragCoord.x/width, gl_FragCoord.y/height);",\n            "   vec4 color = texture2D(uSampler, p);",\n            "   gl_FragColor = color;",\n            "}",\n        ].join("\\n")\n\n        var background;\n        var filter;\n        var uniforms;\n        var repeat = 6.0;\n        var offset = 0.0;\n        var roll = 0.0;\n        var DEG2RAD = Math.PI / 180.0;\n                            \n        SPF.set({\n\n            at:"back",\n            load: function(PIXI, input) \n            {\n                return [input.patterns.animaltech];\n            },\n\n            init: function(PIXI, input) \n            {\n                background = new PIXI.Sprite(input.patterns.animaltech);\n                input.container.addChild(background);\n\n                //background = SPF.fullscreenSprite(input.container, input.patterns.animaltech);\n\n                uniforms = {\n                    "width": {\n                        type:"f",\n                        value: input.width\n                    },\n                    "height": {\n                        type:"f",\n                        value: input.height\n                    }\n                };\n\n                filter = new PIXI.Filter(null,frag,uniforms);\n                background.filters = [filter];\n            },\n\n            render:function(PIXI, input)\n            {\n                //filter.uniforms.width = input.width;\n                //filter.uniforms.height = input.height;\n            },\n\n            resize: function(PIXI, input) \n            {\n                //background.width = input.width;\n                //background.height = input.height;\n\n                filter.uniforms.width = input.width;\n                filter.uniforms.height = input.height;\n            }\n\n        });\n\n        SPF.info({\n            debug: false,\n            title: "Custom Filter (Kaleidoscope)",\n            tip: "PIXI\'s Custom filters used to create Kaleidoscope Effect",\n            firstName: "Patrik",\n            lastName: "Svensson",\n            email: "ps@molamil.com"\n        });\n\n        SPF.start();\n\n    </script></body></html>');
  };
}
(module.exports = require("marko").c(__filename)).c(create);