function create(__helpers) {
  var str = __helpers.s,
      empty = __helpers.e,
      notEmpty = __helpers.ne;

  return function render(data, out) {
    out.w('<!doctype html> <html class="no-js" lang><head><meta charset="utf-8"><meta http-equiv="x-ua-compatible" content="ie=edge"><title>Hue</title><meta name="description" content><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"><link rel="apple-touch-icon" href="apple-touch-icon.png"><link rel="stylesheet" href="../../main.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/detectizr/2.2.0/detectizr.min.js"></script><script src="../../js/pixi.min.js"></script><script src="../../js/TweenMax.min.js"></script></head><body><!--[if lt IE 8]>\n\n        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n\n    <![endif]--><script src="../../sp-framework.js"></script><script src="/js/ps-includes.js"></script><script>\n         \n        print = console.log \n        var DEG2RAD = Math.PI / 180.0;\n\n        var currentCast = "";\n        var beatInterval = 1500;\n        var lastBeatTime;\n        var background, sprite, masker;\n        var patternColor;\n        \n        function updatePattern(PIXI, input)\n        {\n            background.clear();\n            background.beginFill(patternColor, 1);\n            background.drawRect(0,0,input.width, input.height);\n            background.endFill();\n        }\n\n        SPF.set({\n\n            at:"back",\n            load: function(PIXI, input) \n            {\n                return [input.maskers.handdrawnanimal1, input.maskers.botanicorganic1, input.maskers.bbbbird1];\n            },\n\n            init: function(PIXI, input) \n            {\n                patternColor = input.colors[3];\n                background = new PIXI.Graphics();\n                input.container.addChild(background);\n\n                var backgroundTexture = PIXI.Texture.fromImage(\'/assets/ps_temp/SP_pattern_handdrawnanimal.png\'); //TODO: Load from framework\n                backgroundPattern = SPF.fullscreenSprite(input.container,  backgroundTexture );\n\n\t            backgroundColorFilter = new PIXI.filters.ColorMatrixFilter();\n                backgroundPattern.filters = [backgroundColorFilter];\n                backgroundColorFilter.reset();\n                backgroundColorFilter.hue(-120, true);\n\n                var textures = [input.maskers.handdrawnanimal1, input.maskers.botanicorganic1, input.maskers.bbbbird1];\n                var tex = textures[Math.round(Math.random() * textures.length - 1)];\n                masker = SPF.fullscreenSprite(input.container, tex);\n                input.container.addChild(masker);\n\n                backgroundPattern.mask = masker;\n                /*\n                var backgroundTexture = PIXI.Texture.fromImage(\'/assets/ps_temp/SP_pattern_handdrawnanimal.png\'); //TODO: Load from framework\n                var background = SPF.fullscreenSprite(input.container,  backgroundTexture );\n\n\t            backgroundColorFilter = new PIXI.filters.ColorMatrixFilter();\n                background.filters = [backgroundColorFilter];\n                backgroundColorFilter.reset();\n                backgroundColorFilter.hue(-120, true);\n                */\n\n                /*\n                //var index = Math.round(Math.random() * 1);\n                maskSprite = new PIXI.extras.TilingSprite(input.maskers.handdrawnanimal1, 1, 1);\n                input.container.addChild(maskSprite);\n\n                maskSpriteGraphics = new PIXI.Graphics();\n                input.container.addChild(maskSpriteGraphics);\n                */\n\n                lastBeatTime = new Date().getTime();\n            },\n\n            render:function(PIXI, input)\n            {\n                var timeSinceBeat = new Date().getTime() - lastBeatTime;\n                if (timeSinceBeat > beatInterval)\n                {\n                    lastBeatTime = new Date().getTime();\n                }\n                \n                if(input.cast != null && input.cast.id != currentCast)\n                {\n                    currentCast = input.cast.id\n                    //Hues\n                    switch(input.cast.id)\n                    {\n                        case "singer":\n                            backgroundColorFilter.reset();\n                            patternColor = input.colors[2];\n                            break;\n                        case "bass":\n                        case "drums":\n                            backgroundColorFilter.reset();\n                            backgroundColorFilter.hue(-170, true);\n                            patternColor = input.colors[1];\n                            break;\n                        case "all":\n                        case "none":\n                        default:\n                            backgroundColorFilter.reset();\n                            backgroundColorFilter.hue(-120, true);\n                            patternColor = input.colors[3];\n                            break;\n                    }\n                    updatePattern(PIXI, input);\n                }\n            },\n\n            mouseDownTouchStart: function(PIXI, input) \n            {\n                \n            },\n\n            resize: function(PIXI, input) \n            {\n                //sprite.width = input.width;\n                //sprite.height = input.height;\n                updatePattern(PIXI, input);\n\n                /*\n                maskSprite.width = input.width;\n                maskSprite.height = input.height;\n\n                maskSpriteGraphics.clear();\n                maskSpriteGraphics.beginFill(0xff0000);\n                maskSpriteGraphics.drawRect(0, 0, input.width, input.height);\n\n                maskSpriteGraphics.mask = maskSprite;\n                */\n            }\n        });\n\n        SPF.info({\n            debug: false,\n            title: "Chorus",\n            tip: "",\n            firstName: "Patrik",\n            lastName: "Svensson",\n            email: "ps@molamil.com"\n        });\n\n        SPF.start();\n\n    </script></body></html>');
  };
}
(module.exports = require("marko").c(__filename)).c(create);