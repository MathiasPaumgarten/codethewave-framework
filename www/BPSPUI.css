/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'MonostenA';
  src: url("./fonts/monosten-a-web.eot");
  src: url("./fonts/monosten-a-web.eot?#iefix") format("embedded-opentype"), url("./fonts/monosten-a-web.woff") format("woff"), url("./fonts/monosten-a-web.ttf") format("truetype"), url("./fonts/monosten-a-web.svg#BentonSansBlack") format("svg");
}

@keyframes fadeinout {
  0%, 100% {
    opacity: 0;
  }
  5% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  95% {
    opacity: 1;
  }
}

#BPSPUI-navigation {
  color: #FFF;
  font-family: MonostenA;
}

#BPSPUI-navigation .navigation {
  z-index: 200;
  position: absolute;
  left: 80px;
  bottom: 40px;
  margin-bottom: -12px;
  width: 100%;
  height: 25px;
  overflow: hidden;
}

@media (max-width: 1020px) {
  #BPSPUI-navigation .navigation {
    left: 40px;
    bottom: 20px;
  }
}

#BPSPUI-navigation .navigation .play-head {
  pointer-events: none;
  position: absolute;
  top: 0;
  margin-left: -9px;
  left: -100px;
  width: 9px;
  height: 25px;
  background-color: #FFFFFF;
}

#BPSPUI-navigation .navigation .play-head-tail {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: -100px;
  margin-left: -39px;
  width: 30px;
  height: 25px;
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ff174e+0,ff174e+100&0+0,0.9+100 */
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, rgba(255, 23, 78, 0) 0%, rgba(255, 23, 78, 0.9) 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

#BPSPUI-navigation .navigation ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  margin-top: 6px;
}

#BPSPUI-navigation .navigation li:last-child table {
  border-right: none;
}

#BPSPUI-navigation .navigation li {
  cursor: pointer;
  width: 10%;
  display: inline-block;
  float: left;
  height: 9px;
}

#BPSPUI-navigation .navigation li table {
  width: 100%;
  margin: 0;
  padding: 0;
  border: none;
  height: 9px;
  border-right: 1px #FFF solid;
}

#BPSPUI-navigation .navigation li table tr {
  width: 105%;
  display: block;
}

#BPSPUI-navigation .navigation li table td {
  margin: 0;
  padding: 0;
  border: none;
}

#BPSPUI-navigation .navigation li table .side {
  width: 50%;
  height: 9px;
  overflow: hidden;
}

#BPSPUI-navigation .navigation li table .side .line {
  display: block;
  width: 200%;
  height: 1px;
  background-color: #FFF;
}

#BPSPUI-navigation .navigation li table .label {
  width: 1%;
  white-space: nowrap;
}

#BPSPUI-navigation .navigation li table .label:hover {
  color: #ff174e;
}

#BPSPUI-navigation .navigation li .text {
  display: block;
  text-align: center;
  text-transform: uppercase;
  font-size: 10px;
  padding-top: 0px;
  padding-left: 7px;
  padding-right: 7px;
}

#BPSPUI {
  color: #FFF;
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  font-family: MonostenA;
}

#BPSPUI .video-play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  margin-left: -50px;
  margin-top: -50px;
  background-image: url("./assets/ui-video-play-button.png");
  background-size: 30px 30px;
  background-position: center;
  background-repeat: no-repeat;
}

#BPSPUI .info {
  position: absolute;
  width: 50%;
  bottom: 40px;
  left: 80px;
  margin-bottom: 15px;
  padding-bottom: 20px;
  opacity: 1;
  animation: fadeinout 4s linear forwards;
}

#BPSPUI .info .title {
  font-size: 14px;
  text-transform: uppercase;
}

#BPSPUI .info .tip {
  font-size: 11px;
}

@media (max-width: 1020px) {
  #BPSPUI .info {
    left: 40px;
    bottom: 20px;
    padding-bottom: 10px;
  }
}

#BPSPUI .orientation {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #000;
  z-index: 1000;
}

#BPSPUI .orientation .message {
  position: relative;
  text-align: center;
  font-size: 12px;
  width: 50%;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
}

#BPSPUI .orientation .message svg {
  transform: rotate(0deg);
  transition: all 0s ease;
}

#BPSPUI .orientation .message .tilt-phone {
  transform: rotate(90deg);
  transition: all 0.6s ease;
}

#BPSPUI .line-left {
  position: absolute;
  top: 0;
  left: 40px;
  width: 1px;
  height: 100%;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .line-left {
    left: 20px;
  }
}

#BPSPUI .line-right {
  position: absolute;
  top: 0;
  right: 40px;
  width: 1px;
  height: 100%;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .line-right {
    right: 20px;
  }
}

#BPSPUI .top-circle {
  position: absolute;
  top: 40px;
  left: 50%;
  margin-top: -18px;
  margin-left: -36px;
  width: 36px;
  height: 36px;
}

@media (max-width: 1020px) {
  #BPSPUI .top-circle {
    top: 20px;
  }
}

#BPSPUI .top-circle .icon {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 30px;
  height: 30px;
  border: 3px white solid;
  border-radius: 40px;
}

#BPSPUI .top-circle .label {
  text-align: center;
  margin-top: 12px;
  font-size: 10px;
}

#BPSPUI .top-diamond {
  position: absolute;
  top: 40px;
  left: 50%;
  width: 40px;
  height: 40px;
  margin-top: -19px;
}

@media (max-width: 1020px) {
  #BPSPUI .top-diamond {
    top: 20px;
  }
}

#BPSPUI .top-diamond .icon {
  position: absolute;
  left: 5px;
  top: 5px;
  width: 24px;
  height: 24px;
  border: 3px white solid;
  transform: rotate(45deg);
}

#BPSPUI .top-diamond .label {
  text-align: center;
  margin-top: 13px;
  font-size: 10px;
  margin-left: -1px;
}

#BPSPUI .top-line-left {
  position: absolute;
  top: 40px;
  left: 40px;
  width: 250px;
  height: 1px;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .top-line-left {
    top: 20px;
    left: 20px;
  }
}

#BPSPUI .top-line-center {
  position: absolute;
  top: 40px;
  left: 50%;
  margin-left: -6px;
  width: 12px;
  height: 1px;
  background-color: #FFF;
}

@media (max-width: 1020px) {
  #BPSPUI .top-line-center {
    top: 20px;
  }
}

#BPSPUI .top-line-right {
  position: absolute;
  top: 40px;
  right: 40px;
  width: 250px;
  height: 1px;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .top-line-right {
    top: 20px;
    right: 20px;
  }
}

#BPSPUI .bottom-line-left {
  position: absolute;
  bottom: 40px;
  left: 40px;
  width: 40px;
  height: 1px;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .bottom-line-left {
    bottom: 20px;
    left: 20px;
    width: 20px;
  }
}

#BPSPUI .bottom-line-left-vertical {
  position: absolute;
  bottom: 40px;
  margin-bottom: -12px;
  left: 80px;
  width: 1px;
  height: 25px;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .bottom-line-left-vertical {
    bottom: 20px;
    left: 40px;
  }
}

#BPSPUI .bottom-line-right {
  position: absolute;
  bottom: 40px;
  right: 40px;
  width: 40px;
  height: 1px;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .bottom-line-right {
    bottom: 20px;
    right: 20px;
    width: 20px;
  }
}

#BPSPUI .bottom-line-right-vertical {
  position: absolute;
  bottom: 40px;
  margin-bottom: -12px;
  right: 80px;
  width: 1px;
  height: 25px;
  background-color: #FFFFFF;
}

@media (max-width: 1020px) {
  #BPSPUI .bottom-line-right-vertical {
    bottom: 20px;
    right: 40px;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
